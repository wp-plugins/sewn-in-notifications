=== Plugin Name ===
Contributors: jcow, ekaj
Donate link: https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=jacobsnyder%40gmail%2ecom&lc=US&item_name=Jacob%20Snyder&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted
Tags: applications, notifications, messages, frontend, front end
Requires at least: 3.6.1
Tested up to: 4.2.2
Stable tag: 1.1.1
License: GPLv2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html

A centralized, application notification center for front end users.

== Description ==

A plugin for WordPress that creates a very pluggable framework to add notifications on the front end of your application. Notifications can be generated by query variables or through template functions and actions.

This plugin can be used to create site wide notifications, or you can narrow it down to specific pages.

= Add the Notification Center to Your Template(s) =

The most basic way to add notifications is sitewide. You can add the "show" action to a template like your header.php file. This is the most powerful use for the plugin: uniform, centralized notifications.

`
<?php do_action( 'sewn/notifications/show' ); ?>
`

= Create Query Variable Notifications =

The simplest way to extend the notification center is to add query variable key/value pairs to generate a new message when url query variables are submitted.

`
<?php
add_filter( 'sewn/notifications/queries', 'custom_add_query_notifications' );
function custom_add_query_notifications( $queries )
{
	$queries[] = array(
		'key' => 'update',
		'value' => 'true',
		'message' => "Updated.",
		'args' => 'fade=true'
	);
	$queries[] = array(
		'key' => 'update',
		'value' => 'failed',
		'message' => "Unable to update.",
		'args' => 'dismiss=true&error=true'
	);
	$queries[] = array(
		'key' => 'update',
		'value' => 'finished',
		'message' => "Finished!",
		'args' => 'fade=10000' // wait ten seconds before fading
	);
	return $queries;
}
?>
`

Now whenever a query variable is added to the end of a page, a message can be shown in the notification center.

So `http://example.com/path/to/page/?update=true` will generate the message: "Updated." in the notification center.

= Arguments for Messages =

When adding a message, there are arguments you can use to customize the functionality.

1. `error` When set to true, this will add the error class to the message. Default: false
1. `fade` When set to true, this will fade the message out after 3 seconds. You can change the pause time by setting fade to a number (in milliseconds). Default: false
1. `dismiss` Allows a message to be dismissed by the user with a close button. Default: false
1. `event` Allows message to be persistent, so that it shows up on each page load unless dismissed. The event tracks the message and updates the user's meta when the message is dismissed, so it will stop showing up. Default: false
1. `page` Lock a message to a specific page only. When page is set, a `is_page($page)` check will be performed before showing the message. Particularly useful when setting up query variable pairs. Default: false

= Maually Generate Notifications =

Add notifications manually anywhere before the `show` action.

`
if ( $something_happened ) :
	do_action( 'sewn/notifications/add', $message, $args );
endif;
`

== Installation ==

* Install plugin either via the WordPress.org plugin directory, or by uploading the files to your server.
* Activate the plugin via the Plugins admin page.


== Frequently Asked Questions ==

= None yet. =

== Screenshots ==

1. A basic example of a notification out of the box.

== Changelog ==

= 1.1.1 - 2015-06-08 =

- Launched in the repo


== Upgrade Notice ==

= 1.1.1 =
This is the first version in the Wordpress repository.
